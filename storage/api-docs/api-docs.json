{
    "openapi": "3.0.0",
    "info": {
        "title": "InvoiceFit Api Documentation",
        "description": "Api Documentation with Swagger",
        "contact": {
            "email": "ylemrini@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000"
        }
    ],
    "paths": {
        "/api/attachments": {
            "get": {
                "tags": [
                    "attachments"
                ],
                "summary": "Get list of attachments",
                "description": "Returns list of attachments",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/attachments/download/{name}": {
            "get": {
                "tags": [
                    "attachments"
                ],
                "summary": "Download a file",
                "description": "Returns the file by name",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/attachments/{id}": {
            "get": {
                "tags": [
                    "attachments"
                ],
                "summary": "Get attachments by Id",
                "description": "Returns the attachments by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "attachments id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "api/attachments/{name}": {
            "post": {
                "tags": [
                    "attachments"
                ],
                "summary": "Store new attachments and files",
                "description": "Returns attachments data",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "attachment name",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Attachment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/attachement/{id}": {
            "put": {
                "tags": [
                    "attachments"
                ],
                "summary": "Update existing attachments",
                "description": "Returns updated attachments data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "attachments id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Attachment"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/attachments/{name}": {
            "delete": {
                "tags": [
                    "attachments"
                ],
                "summary": "Delete existing attachments and file",
                "description": "Deletes a record and a file and returns no content",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "attachments name",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/banks": {
            "get": {
                "tags": [
                    "Banks"
                ],
                "summary": "Get list of Banks",
                "description": "Returns list of Banks",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Banks"
                ],
                "summary": "Store new Banks",
                "description": "Returns Banks data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bank"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/banks/{id}": {
            "get": {
                "tags": [
                    "Banks"
                ],
                "summary": "Get Banks by Id",
                "description": "Returns the Banks by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Banks id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Banks"
                ],
                "summary": "Update existing Banks",
                "description": "Returns updated Banks data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Banks id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bank"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Banks"
                ],
                "summary": "Delete existing Banks",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Banks id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/currencies": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Get list of Currencies",
                "description": "Returns list of Currencies",
                "operationId": "getCurrenciesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Store new Currencies",
                "description": "Returns Currencies data",
                "operationId": "storeCurrencies",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Currency"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/currencies/{id}": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Get Currencies by Id",
                "description": "Returns the Currencies by id",
                "operationId": "getCurrenciesbyId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currencies id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Update existing Currencies",
                "description": "Returns updated Currencies data",
                "operationId": "updateCurrencies",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currencies id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Currency"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Delete existing Currencies",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCurrencies",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currencies id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/custom-fields": {
            "get": {
                "tags": [
                    "Custom-Fields"
                ],
                "summary": "Get list of Custom-Fields",
                "description": "Returns list of Custom-Fields",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomField"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Custom-Fields"
                ],
                "summary": "Store new Custom-Fields",
                "description": "Returns Custom-Fields data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomField"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomField"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/custom-fields/{id}": {
            "get": {
                "tags": [
                    "Custom-Fields"
                ],
                "summary": "Get Custom-Fields by Id",
                "description": "Returns the Custom-Fields by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom-Fields id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomField"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Custom-Fields"
                ],
                "summary": "Update existing Custom-Fields",
                "description": "Returns updated Custom-Fields data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom-Fields id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomField"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomField"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Custom-Fields"
                ],
                "summary": "Delete existing Custom-Fields",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom-Fields id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/customer-contacts": {
            "get": {
                "tags": [
                    "Customer-contacts"
                ],
                "summary": "Get list of Customer-contacts",
                "description": "Returns list of Customer-contacts",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerContact"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customer-contacts"
                ],
                "summary": "Store new Customer-contacts",
                "description": "Returns Customer-contacts data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerContact"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerContact"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/customer-contacts/{id}": {
            "get": {
                "tags": [
                    "Customer-contacts"
                ],
                "summary": "Get Customer-contacts by Id",
                "description": "Returns the Customer-contacts by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer-contacts id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerContact"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customer-contacts"
                ],
                "summary": "Update existing Customer-contacts",
                "description": "Returns updated Customer-contacts data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer-contacts id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerContact"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerContact"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customer-contacts"
                ],
                "summary": "Delete existing Customer-contacts",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer-contacts id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get list of Customers",
                "description": "Returns list of Customers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Store new Customers",
                "description": "Returns Customers data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/customers/{id}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get Customers by Id",
                "description": "Returns the Customers by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customers id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update existing Customers",
                "description": "Returns updated Customers data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customers id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete existing Customers",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customers id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/customers/export": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Export customers in a file",
                "description": "Export customers in a file",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "format of file",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/customers/import": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Import customers in a file",
                "description": "Import customers in a file",
                "requestBody": {
                    "description": "file",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/customer-groups": {
            "get": {
                "tags": [
                    "Customer-Groups"
                ],
                "summary": "Get list of Customer-Groups",
                "description": "Returns list of Customer-Groups",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerGroup"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customer-Groups"
                ],
                "summary": "Store new Customer-Groups",
                "description": "Returns Customer-Groups data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerGroup"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/customer-groups/{id}": {
            "get": {
                "tags": [
                    "Customer-Groups"
                ],
                "summary": "Get Customer-Groups by Id",
                "description": "Returns the Customer-Groups by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer-Groups id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerGroup"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customer-Groups"
                ],
                "summary": "Update existing Customer-Groups",
                "description": "Returns updated Customer-Groups data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer-Groups id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerGroup"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customer-Groups"
                ],
                "summary": "Delete existing Customer-Groups",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer-Groups id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/documents": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get list of Documents",
                "description": "Returns list of Documents",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Store new Documents",
                "description": "Returns Documents data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Document"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/documents/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get Documents by Id",
                "description": "Returns the Documents by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Update existing Documents",
                "description": "Returns updated Documents data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Document"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Delete existing Documents",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Documents id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/documents/export": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Export documents in a file",
                "description": "Export documents in a file",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "format of file",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/documents/import": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Import documents in a file",
                "description": "Import documents in a file",
                "requestBody": {
                    "description": "file",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/document-templates": {
            "get": {
                "tags": [
                    "Document-Templates"
                ],
                "summary": "Get list of Document-Templates",
                "description": "Returns list of Document-Templates",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentTemplate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Document-Templates"
                ],
                "summary": "Store new Document-Templates",
                "description": "Returns Document-Templates data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentTemplate"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/document-templates/{id}": {
            "get": {
                "tags": [
                    "Document-Templates"
                ],
                "summary": "Get Document-Templates by Id",
                "description": "Returns the Document-Templates by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document-Templates id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentTemplate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Document-Templates"
                ],
                "summary": "Update existing Document-Templates",
                "description": "Returns updated Document-Templates data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document-Templates id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentTemplate"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Document-Templates"
                ],
                "summary": "Delete existing Document-Templates",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Document-Templates id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/email-templates": {
            "get": {
                "tags": [
                    "Email-Templates"
                ],
                "summary": "Get list of Email-Templates",
                "description": "Returns list of Email-Templates",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTemplate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Email-Templates"
                ],
                "summary": "Store new Email-Templates",
                "description": "Returns Email-Templates data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTemplate"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/email-templates/{id}": {
            "get": {
                "tags": [
                    "Email-Templates"
                ],
                "summary": "Get Email-Templates by Id",
                "description": "Returns the Email-Templates by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email-Templates id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTemplate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Email-Templates"
                ],
                "summary": "Update existing Email-Templates",
                "description": "Returns updated Email-Templates data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email-Templates id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTemplate"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Email-Templates"
                ],
                "summary": "Delete existing Email-Templates",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email-Templates id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/event-logs": {
            "get": {
                "tags": [
                    "Event-Logs"
                ],
                "summary": "Get list of Event Logs",
                "description": "Returns list of Event Logs",
                "operationId": "App\\Http\\Controllers\\Api\\EventLogController::index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventLog"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/event-logs/{id}": {
            "get": {
                "tags": [
                    "Event-Logs"
                ],
                "summary": "Get Event Log by ID",
                "description": "Returns Event Log",
                "operationId": "App\\Http\\Controllers\\Api\\EventLogController::show",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventLog"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/expense-categories": {
            "get": {
                "tags": [
                    "Expense-Categories"
                ],
                "summary": "Get list of Expense-Categories",
                "description": "Returns list of Expense-Categories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseCategory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Expense-Categories"
                ],
                "summary": "Store new Expense-Categories",
                "description": "Returns Expense-Categories data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTemplate"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/expense-categories/{id}": {
            "get": {
                "tags": [
                    "Expense-Categories"
                ],
                "summary": "Get Expense-Categories by Id",
                "description": "Returns the Expense-Categories by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Expense-Categories id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseCategory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Expense-Categories"
                ],
                "summary": "Update existing Expense-Categories",
                "description": "Returns updated Expense-Categories data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Expense-Categories id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseCategory"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Expense-Categories"
                ],
                "summary": "Delete existing Expense-Categories",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Expense-Categories id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/expenses": {
            "get": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Get list of Expenses",
                "description": "Returns list of Expenses",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Store new Expenses",
                "description": "Returns Expenses data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Expense"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/expenses/{id}": {
            "get": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Get Expenses by Id",
                "description": "Returns the Expenses by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Expenses id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Update existing Expenses",
                "description": "Returns updated Expenses data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Expenses id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Expense"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Delete existing Expenses",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Expenses id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/expenses/export": {
            "get": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Export expenses in a file",
                "description": "Export expenses in a file",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "format of file",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/expenses/import": {
            "post": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Import expenses in a file",
                "description": "Import expenses in a file",
                "requestBody": {
                    "description": "file",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/item-categories": {
            "get": {
                "tags": [
                    "Item-Categories"
                ],
                "summary": "Get list of Item-Categories",
                "description": "Returns list of Item-Categories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ItemCategory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Item-Categories"
                ],
                "summary": "Store new Item-Categories",
                "description": "Returns Item-Categories data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ItemCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ItemCategory"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/item-categories/{id}": {
            "get": {
                "tags": [
                    "Item-Categories"
                ],
                "summary": "Get Item-Categories by Id",
                "description": "Returns the Item-Categories by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item-Categories id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ItemCategory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Item-Categories"
                ],
                "summary": "Update existing Item-Categories",
                "description": "Returns updated Item-Categories data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item-Categories id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ItemCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ItemCategory"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Item-Categories"
                ],
                "summary": "Delete existing Item-Categories",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item-Categories id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/items": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get list of Items",
                "description": "Returns list of Items",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Store new Items",
                "description": "Returns Items data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Item"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/items/{id}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get Items by Id",
                "description": "Returns the Items by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Items id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Update existing Items",
                "description": "Returns updated Items data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Items id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Item"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Delete existing Items",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Items id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/notes": {
            "get": {
                "tags": [
                    "Notes"
                ],
                "summary": "Get list of Notes",
                "description": "Returns list of Notes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notes"
                ],
                "summary": "Store new Notes",
                "description": "Returns Notes data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Note"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/notes/{id}": {
            "get": {
                "tags": [
                    "Notes"
                ],
                "summary": "Get Notes by Id",
                "description": "Returns the Notes by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notes id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Notes"
                ],
                "summary": "Update existing Notes",
                "description": "Returns updated Notes data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notes id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Note"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Notes"
                ],
                "summary": "Delete existing Notes",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notes id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get list of Payments",
                "description": "Returns list of Payments",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Store new Payments",
                "description": "Returns Payments data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Payment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/payments/{id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get Payments by Id",
                "description": "Returns the Payments by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payments id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Payments"
                ],
                "summary": "Update existing Payments",
                "description": "Returns updated Payments data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payments id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Payment"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payments"
                ],
                "summary": "Delete existing Payments",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payments id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/payments/export": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Export payments in a file",
                "description": "Export payments in a file",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "format of file",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/payments/import": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Import payments in a file",
                "description": "Import payments in a file",
                "requestBody": {
                    "description": "file",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/payment-modes": {
            "get": {
                "tags": [
                    "Payment-Modes"
                ],
                "summary": "Get list of Payment-Modes",
                "description": "Returns list of Payment-Modes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMode"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payment-Modes"
                ],
                "summary": "Store new Payment-Modes",
                "description": "Returns Payment-Modes data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMode"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMode"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/payment-modes/{id}": {
            "get": {
                "tags": [
                    "Payment-Modes"
                ],
                "summary": "Get Payment-Modes by Id",
                "description": "Returns the Payment-Modes by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment-Modes id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMode"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Payment-Modes"
                ],
                "summary": "Update existing Payment-Modes",
                "description": "Returns updated Payment-Modes data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment-Modes id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMode"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMode"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payment-Modes"
                ],
                "summary": "Delete existing Payment-Modes",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment-Modes id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/preview/{id}": {
            "get": {
                "tags": [
                    "pdf"
                ],
                "summary": "preview  document by Id",
                "description": "preview document by  id",
                "operationId": "App\\Http\\Controllers\\Api\\PdfController::getData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "invoice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/download/{id}": {
            "get": {
                "tags": [
                    "pdf"
                ],
                "summary": "download document by  id",
                "description": "download document by  id",
                "operationId": "App\\Http\\Controllers\\Api\\PdfController::getData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "invoice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get list of Roles",
                "description": "Returns list of Roles",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Store new Roles",
                "description": "Returns Roles data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get Roles by Id",
                "description": "Returns the Roles by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Roles id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update existing Roles",
                "description": "Returns updated Roles data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Roles id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete existing Roles",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Roles id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/settings/{name}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get Settings by name",
                "description": "Returns the Settings by name",
                "operationId": "App\\Http\\Controllers\\Api\\SettingController::get",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Settings name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/settings/many": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get more than one Settings ",
                "description": "Returns the Settings ",
                "operationId": "App\\Http\\Controllers\\Api\\SettingController::getMany",
                "parameters": [
                    {
                        "name": "name1",
                        "in": "query",
                        "description": "Settings 1 name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name2",
                        "in": "query",
                        "description": "Settings 2 name ",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "add more than one settings",
                "operationId": "setManySettings",
                "parameters": [
                    {
                        "name": "settings",
                        "in": "query",
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "many settings with name, value, auto_load",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "currency"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "USD"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "name": "currency",
                                                "value": "MAD",
                                                "auto_load": true
                                            },
                                            {
                                                "name": "timezone",
                                                "value": "GMT",
                                                "auto_load": false
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/settings": {
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "add new settings",
                "operationId": "addSettings",
                "requestBody": {
                    "description": "Data packet for Test",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "settingsItems": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "currency"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "USD"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "name": "currency",
                                                "value": "MAD",
                                                "auto_load": true
                                            },
                                            {
                                                "name": "timezone",
                                                "value": "GMT",
                                                "auto_load": false
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/taxes": {
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Get list of Taxes",
                "description": "Returns list of Taxes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tax"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Store new Taxes",
                "description": "Returns Taxes data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tax"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tax"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/taxes/{id}": {
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Get Taxes by Id",
                "description": "Returns the Taxes by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Taxes id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tax"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Update existing Taxes",
                "description": "Returns updated Taxes data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Taxes id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tax"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tax"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Delete existing Taxes",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Taxes id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of Users",
                "description": "Returns list of Users",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store new Users",
                "description": "Returns Users data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get Users by Id",
                "description": "Returns the Users by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Users id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing Users",
                "description": "Returns updated Users data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Users id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete existing Users",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Users id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/vendors": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Get list of Vendors",
                "description": "Returns list of Vendors",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Store new Vendors",
                "description": "Returns Vendors data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vendor"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/vendors/{id}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Get Vendors by Id",
                "description": "Returns the Vendors by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vendors id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Update existing Vendors",
                "description": "Returns updated Vendors data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vendors id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vendor"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vendor"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Delete existing Vendors",
                "description": "Deletes a record and returns no content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vendors id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/vendors/export": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Export vendors in a file",
                "description": "Export vendors in a file",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "format of file",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/vendors/import": {
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Import vendors in a file",
                "description": "Import vendors in a file",
                "requestBody": {
                    "description": "file",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "operationId": "login",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register",
                "operationId": "register",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "yassine"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Ouaarab"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "yassine@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logout",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Attachment": {
                "title": "Attachment",
                "properties": {
                    "object_type": {
                        "type": "object",
                        "example": "customer"
                    },
                    "object_id": {
                        "type": "integer",
                        "example": "17"
                    },
                    "name": {
                        "type": "string",
                        "example": "Mr. Fern Huel III"
                    },
                    "size": {
                        "type": "number",
                        "example": "7"
                    },
                    "type": {
                        "type": "string",
                        "example": "Wilson Legros IV"
                    },
                    "display_name": {
                        "type": "string",
                        "example": "Alek Stark"
                    },
                    "user_type": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_by": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Attachment"
                }
            },
            "Bank": {
                "title": "Bank",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Kaylah Huel"
                    },
                    "currency": {
                        "type": "string",
                        "example": "KHR"
                    },
                    "swift": {
                        "type": "string",
                        "example": "ABJKMINP"
                    },
                    "iban": {
                        "type": "string",
                        "example": "ME66884062721807702085"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Bank"
                }
            },
            "Currency": {
                "title": "Currency",
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "RON"
                    },
                    "symbol": {
                        "type": "string",
                        "example": "€"
                    },
                    "rate": {
                        "type": "number",
                        "example": "10.70"
                    },
                    "is_default": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_by": {
                        "type": "integer",
                        "example": "1"
                    },
                    "updated_by": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Currency"
                }
            },
            "CustomField": {
                "title": "CustomField",
                "properties": {
                    "object": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "type": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "required": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "options": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "title": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "description": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "default_value": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "order": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CustomField"
                }
            },
            "Customer": {
                "title": "Customer",
                "properties": {
                    "customer_group_id": {
                        "type": "string",
                        "example": "3"
                    },
                    "number": {
                        "type": "string",
                        "example": "XFPGH404"
                    },
                    "name": {
                        "type": "string",
                        "example": "Grant, Stark and Muller"
                    },
                    "vat_number": {
                        "type": "string",
                        "example": "KWVWV112"
                    },
                    "phone": {
                        "type": "string",
                        "example": "469.202.7584"
                    },
                    "website": {
                        "type": "string",
                        "example": "linkedin.com"
                    },
                    "address": {
                        "type": "string",
                        "example": "5373 Reichert Knoll West Ovaside, KS 29644-8069"
                    },
                    "city": {
                        "type": "string",
                        "example": "Port Aric"
                    },
                    "state": {
                        "type": "integer",
                        "example": "Illinois"
                    },
                    "zip_code": {
                        "type": "string",
                        "example": "34872"
                    },
                    "country": {
                        "type": "string",
                        "example": "Singapore"
                    },
                    "shipping_is_same_as_billing": {
                        "type": "string",
                        "example": "1"
                    },
                    "shipping_address": {
                        "type": "string",
                        "example": "294 Balistreri Run North Theresia, NV 80842"
                    },
                    "shipping_city": {
                        "type": "string",
                        "example": "Beierhaven"
                    },
                    "shipping_state": {
                        "type": "string",
                        "example": "Ohio"
                    },
                    "shipping_zip_code": {
                        "type": "string",
                        "example": "31739"
                    },
                    "shipping_country": {
                        "type": "string",
                        "example": "Falkland Islands (Malvinas)"
                    },
                    "currency": {
                        "type": "string",
                        "example": "€"
                    },
                    "notes": {
                        "type": "string",
                        "example": "eos"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "-33.204239"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "-65.114743"
                    },
                    "stripe_id": {
                        "type": "string",
                        "example": "NOVKC111"
                    },
                    "inactive": {
                        "type": "boolean",
                        "example": "0"
                    },
                    "custom_fields": {
                        "type": "json",
                        "example": null
                    },
                    "created_by": {
                        "type": "integer",
                        "example": "1"
                    },
                    "updated_by": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Customer"
                }
            },
            "CustomerContact": {
                "title": "CustomerContact",
                "properties": {
                    "customer_id": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "email": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "password": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "phone": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "position": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "layout_direction": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "is_primary_contact": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "permissions": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "email_notifications": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "social_links": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "smart_summary": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "inactive": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "remember_token": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CustomerContact"
                }
            },
            "CustomerGroup": {
                "title": "CustomerGroup",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "animi"
                    },
                    "created_by": {
                        "type": "integer",
                        "example": "1"
                    },
                    "updated_by": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CustomerGroup"
                }
            },
            "Document": {
                "title": "Document",
                "properties": {
                    "number": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "doctype": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "customer_id": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "parent": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "address": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "city": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "zip_code": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "state": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "country": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "currency": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "discount_name": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "discount_type": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "discount_value": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "status": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "sales_agent_id": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "displayed_date": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "expiry_date": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "due_date": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "taxes": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "sub_total": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "discount_total": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "tax_total": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "total_excltax": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "total_incltax": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "amount_paid": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "applied_credits": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "admin_note": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "client_note": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "terms_and_condition": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "prevent_sending_overdue_reminder": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "recurring_invoice_type": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "recurring_invoice_total_cycle": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "recurring_invoice_custom_parameter": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "recurring_invoice_custom_type": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "recurring_invoice_custom_num_of_times_ran": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "is_recurring_invoice_period_infinity": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "date_of_last_recurring_invoice_generated": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "allow_partial_payment": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "accepted_date": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "accepted_by_first_name": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "accepted_by_last_name": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "accepted_by_email": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "accepted_by_signature": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "custom_fields": {
                        "type": "json",
                        "example": null
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Document"
                }
            },
            "DocumentTemplate": {
                "title": "DocumentTemplate",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "doctypes": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "content": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "inactive": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "DocumentTemplate"
                }
            },
            "EmailTemplate": {
                "title": "EmailTemplate",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "subject": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "body": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "is_shared": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "EmailTemplate"
                }
            },
            "EventLog": {
                "title": "EventLog",
                "properties": {
                    "action": {
                        "type": "string",
                        "example": "created"
                    },
                    "attributes": {
                        "type": "json",
                        "example": "[]"
                    },
                    "changes": {
                        "type": "json",
                        "example": "[]"
                    },
                    "original": {
                        "type": "json",
                        "example": "[]"
                    },
                    "object_type": {
                        "type": "string",
                        "example": "customers"
                    },
                    "object_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "causer_type": {
                        "type": "string",
                        "example": "user"
                    },
                    "causer_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "request_method": {
                        "type": "string",
                        "example": "POST"
                    },
                    "request_path": {
                        "type": "string",
                        "example": "/api/customers"
                    },
                    "created_at": {
                        "type": "datetime"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "EventLog"
                }
            },
            "Expense": {
                "title": "Expense",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "expense_category_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "vendor_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "customer_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "invoice_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "currency": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "currency_rate": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "payment_mode_id": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "date": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "amount_excltax": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "amount_incltax": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "name": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "note": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "attachment": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "reference": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "is_billable": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "tax_id": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Expense"
                }
            },
            "ExpenseCategory": {
                "title": "ExpenseCategory",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ExpenseCategory"
                }
            },
            "Item": {
                "title": "Item",
                "properties": {
                    "item_category_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "number": {
                        "type": "number",
                        "example": "BMCE"
                    },
                    "name": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "description": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "price": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "unit": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "tax_id": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Item"
                }
            },
            "ItemCategory": {
                "title": "ItemCategory",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "parent_id": {
                        "type": "integer",
                        "example": "MAD"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ItemCategory"
                }
            },
            "Note": {
                "title": "Note",
                "properties": {
                    "object_type": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "object_id": {
                        "type": "integer",
                        "example": "MAD"
                    },
                    "body": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Note"
                }
            },
            "Payment": {
                "title": "Payment",
                "properties": {
                    "invoice_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "date": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "amount": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "currency": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "currency_rate": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "payment_mode_id": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "bank_id": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "note": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Payment"
                }
            },
            "PaymentMode": {
                "title": "PaymentMode",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "inactive": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "is_online": {
                        "type": "boolean",
                        "example": "swift exemple here"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PaymentMode"
                }
            },
            "Role": {
                "title": "Role",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "is_administrator": {
                        "type": "boolean",
                        "example": "MAD"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Role"
                }
            },
            "Setting": {
                "title": "Setting",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "currency"
                    },
                    "value": {
                        "type": "string",
                        "example": "USD"
                    },
                    "auto_load": {
                        "type": "boolean",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Setting"
                }
            },
            "Tax": {
                "title": "Tax",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "rate": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Tax"
                }
            },
            "User": {
                "title": "User",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "role_id": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "short_code": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "code": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "gender": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "birth_date": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "email": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "password": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "google_id": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "phone": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "address": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "job_title": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "salary_term": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "joining_date": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "reporting_boss": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "facebook": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "linked_in": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "skype": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "email_signature": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "photo": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "is_administrator": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "inactive": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "task_timer": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "updated_by": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "deleted_at": {
                        "type": "string",
                        "example": "swift exemple here"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "Vendor": {
                "title": "Vendor",
                "properties": {
                    "number": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "name": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "contact_first_name": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "contact_last_name": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "contact_email": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "contact_phone": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "contact_position": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "phone": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "website": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "address": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "city": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "state": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "zip_code": {
                        "type": "string",
                        "example": "BMCE"
                    },
                    "country": {
                        "type": "string",
                        "example": "MAD"
                    },
                    "notes": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "latitude": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "longitude": {
                        "type": "string",
                        "example": "swift exemple here"
                    },
                    "inactive": {
                        "type": "string",
                        "example": "42652 26267 567 22 26"
                    },
                    "custom_fields": {
                        "type": "json",
                        "example": null
                    },
                    "created_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "update_by": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Vendor"
                }
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "A short description for security scheme",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        []
    ]
}